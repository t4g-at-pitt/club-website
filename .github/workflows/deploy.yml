name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]  # Change to your default branch if different
  pull_request:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node dependencies
        run: npm install

      - name: Install Dioxus CLI
        run: cargo install dioxus-cli

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Tailwind CSS
        run: npx tailwindcss -i ./input.css -o ./assets/tailwind.css --watch=false
        # Adjust the input/output paths according to your setup

      - name: Build Dioxus project
        run: dx build --release
        # This typically generates files in the 'dist' folder

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload the Dioxus build output directory
          path: './target/dx/t4g/release/web/public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2